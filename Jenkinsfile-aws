pipeline {
    agent any

    triggers {
        pollSCM '* * * * *'
    }

    stages {
        stage('Prepare') {
            steps {
                script {
                    // Determine the script command based on the OS
                    def gradlewCmd = isUnix() ? './gradlew' : 'gradlew.bat'
                    // Apply permissions on Unix-like systems only
                    if(isUnix()) {
                        sh 'chmod +x ./gradlew > /dev/null 2>&1 || true'
                    }
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    def gradlewCmd = isUnix() ? './gradlew' : 'gradlew.bat'
                    sh "${gradlewCmd} assemble"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def gradlewCmd = isUnix() ? './gradlew' : 'gradlew.bat'
                    sh "${gradlewCmd} test"
                }
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    if (isUnix()) {
                        sh './gradlew docker'
                    } else {
                        bat 'gradlew.bat docker'
                    }
                }
            }
        }
        stage('Push Docker image') {
            environment {
                DOCKER_HUB_LOGIN = credentials('docker-hub')
            }
            steps {
                script {
                    if (isUnix()) {
                        sh "docker login --username=${env.DOCKER_HUB_LOGIN_USR} --password=${env.DOCKER_HUB_LOGIN_PSW}"
                        sh './gradlew dockerPush -PdockerHubUsername=${env.DOCKER_HUB_LOGIN_USR}'
                    } else {
                        bat "docker login --username=${env.DOCKER_HUB_LOGIN_USR} --password=${env.DOCKER_HUB_LOGIN_PSW}"
                        bat 'gradlew.bat dockerPush -PdockerHubUsername=%DOCKER_HUB_LOGIN_USR%'
                    }
                }
            }
        }
        stage('Deploy to AWS') {
            environment {
                DOCKER_HUB_LOGIN = credentials('docker-hub')
            }
            steps {
                script {
                    if (isUnix()) {
                        withAWS(credentials: 'aws-credentials', region: env.AWS_REGION) {
                            sh './gradlew awsCfnMigrateStack awsCfnWaitStackComplete -PsubnetId=${env.SUBNET_ID} -PdockerHubUsername=${env.DOCKER_HUB_LOGIN_USR} -Pregion=${env.AWS_REGION}'
                        }
                    } else {
                        withAWS(credentials: 'aws-credentials', region: env.AWS_REGION) {
                            bat 'gradlew.bat awsCfnMigrateStack awsCfnWaitStackComplete -PsubnetId=%SUBNET_ID% -PdockerHubUsername=%DOCKER_HUB_LOGIN_USR% -Pregion=%AWS_REGION%'
                        }
                    }
                }
            }
        }
    }
}

// Utility method to check if the OS is Unix-like
def isUnix() {
    return !System.getProperty('os.name').toLowerCase().contains('windows')
}
