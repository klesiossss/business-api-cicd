pipeline {
    agent any

    triggers {
        pollSCM '* * * * *'
    }

    stages {
        stage('Build') {
            steps {
                script {
                        def gradlewCmd = isUnix() ? 'sh ./gradlew' : 'gradlew.bat'
                                    if (isUnix()) {
                                    sh 'chmod +x ./gradlew > /dev/null 2>&1 || true'
                                    sh "${gradlewCmd} assemble"
                                    } else {
                                        '${gradlewCmd} assemble'
                                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def gradlewCmd = isUnix() ? 'sh ./gradlew' : 'gradlew.bat'
                     '${gradlewCmd} test'
                }
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    def gradlewCmd = isUnix() ? 'sh ./gradlew' : 'gradlew.bat'
                    if (isUnix()) {
                        sh "${gradlewCmd} docker"
                    } else {
                        '${gradlewCmd} docker'
                    }
                }
            }
        }
        stage('Push Docker image') {
            environment {
                DOCKER_HUB_LOGIN = credentials('docker-hub')
            }
            steps {
                script {
                    def gradlewCmd = isUnix() ? './gradlew' : 'gradlew.bat'
                    if (isUnix()) {
                        sh "docker login --username=${DOCKER_HUB_LOGIN_USR} --password=${DOCKER_HUB_LOGIN_PSW}"
                        sh "${gradlewCmd} dockerPush -PdockerHubUsername=${DOCKER_HUB_LOGIN_USR}"
                    } else {
                         'docker login --username=${DOCKER_HUB_LOGIN_USR} --password=${DOCKER_HUB_LOGIN_PSW}'
                         '${gradlewCmd} dockerPush -PdockerHubUsername=DOCKER_HUB_LOGIN_USR'

                    }
                }
            }
        }
        stage('Deploy to AWS') {
            environment {
                DOCKER_HUB_LOGIN = credentials('docker-hub')
            }
            steps {
                script {
                    def gradlewCmd = isUnix() ? './gradlew' : 'gradlew.bat'
                    if (isUnix()) {
                        withAWS(credentials: 'aws-credentials', region: env.AWS_REGION) {
                            sh "${gradlewCmd} awsCfnMigrateStack awsCfnWaitStackComplete -PsubnetId=${env.SUBNET_ID} -PdockerHubUsername=${env.DOCKER_HUB_LOGIN_USR} -Pregion=${env.AWS_REGION}"
                        }
                    } else {
                        withAWS(credentials: 'aws-credentials', region: env.AWS_REGION) {
                          echo "Running Deploy to AWS  with command: ${gradlewCmd}"
                             '${gradlewCmd} awsCfnMigrateStack awsCfnWaitStackComplete -PsubnetId=%SUBNET_ID% -PdockerHubUsername=%DOCKER_HUB_LOGIN_USR% -Pregion=%AWS_REGION%'
                        }
                    }
                }
            }
        }
    }
}

// Utility method to check if the OS is Unix-like
def isUnix() {
    return !System.getProperty('os.name').toLowerCase().contains('windows')
}
